by = list(bill_length_mm=pg$bill_length_mm),
FUN = mean)
# aggregate() 함수를 이용
# 펭귄의 종별로 부리의 길이와 깊이, 날개의 길이, 체질량의 평균)
aggregate(pg,
by = list(bill_length_mm=pg$bill_length_mm),
FUN = mean)
# aggregate() 함수를 이용
# 펭귄의 종별로 부리의 길이와 깊이, 날개의 길이, 체질량의 평균)
aggregate(bill_length_mm~body_mass_g, pg, mean)
str(pg)
# aggregate() 함수를 이용
# 펭귄의 종별로 부리의 길이와 깊이, 날개의 길이, 체질량의 평균)
aggregate(species~body_mass_g, pg, mean)
# aggregate() 함수를 이용
# 펭귄의 종별로 부리의 길이와 깊이, 날개의 길이, 체질량의 평균)
aggregate(bill_length_mm ~body_mass_g, pg, mean)
# aggregate() 함수를 이용
# 펭귄의 종별로 부리의 길이와 깊이, 날개의 길이, 체질량의 평균)
aggregate(bill_length_mm ~ species, pg, mean)
aggregate(bill_depth_mm ~ species, pg, mean)
aggregate(flipper_length_mm ~ species, pg, mean)
aggregate(body_mass_g ~ species, pg, mean)
boxplot(Petal.Length ~ Species, data = iris,
col = 'steelblue')
boxplot(bill_length_mm ~ Species, data = iris,
col = 'steelblue')
boxplot(bill_length_mm ~ Species, data = pg,
col = 'steelblue')
boxplot(bill_length_mm ~ Species, data = pg)
boxplot(species~body_mass_g, data = pg)
boxplot(bill_length_mm~body_mass_g, data = pg)
boxplot(island~bill_length_mm, data = pg)
boxplot(Petal.Length ~ Species, data = iris,
col = 'orange',
border = 'brown',
pch = 19)
# pg 결측치 개수
is.na(pg)
# pg 결측치 개수
sum(is.na(pg))
# pg 결측치 개수
pg[is.na(pg),]
# pg 결측치 개수
is.na(pg$species)
# pg 결측치 개수
nrow(is.na(pg$species))
# pg 결측치 개수
ncol(is.na(pg$species))
# pg 결측치 개수
nrow(is.na(pg$species))
nrow(is.na(pg$island))
nrow(is.na(pg$bill_length_mm))
is.na(pg$bill_length_mm)
pg[is.na(pg$bill_length_mm),]
pg[,is.na(pg$bill_length_mm)]
pg[is.na(pg$bill_length_mm)=T,]
pg[is.na(pg$bill_length_mm)==T,]
# pg 결측치 개수
nrow(is.na(pg$species))
# pg 결측치 개수
nrow(is.na(pg$species)==T)
# pg 결측치 개수
nrow(pg[is.na(pg$species)==T,])
nrow(pg[is.na(pg$island)==T,])
nrow(pg[is.na(pg$bill_length_mm)==T,])
nrow(pg[is.na(pg$bill_depth_mm)==T,])
nrow(pg[is.na(pg$bill_length_mm)==F,])
nrow(pg$bill_length_mm)
nrow(pg[,is.na(pg$bill_length_mm)==F])
nrow(pg[is.na(pg$bill_length_mm)==F,])
nrow(pg$bill_length_mm)
ncol(pg$bill_length_mm)
# VIM 패키지의 aggr() 함수를 이용하여 결측값의 패턴을 확인
aggr(pg, prop = F, numbers = T, sortVar = T)
aggr(pg, numbers = T, prop = F)
pg <- data.frame(penguins)
pg
aggr(pg, prop = F, numbers = T, sortVar = T)
nrow(pg[is.na(pg$species)==T,])
nrow(pg[is.na(pg$bill_depth_mm)==T,])
aggr(pg, prop = F, numbers = T, sortVar = T)
aggr(pg, prop = T, numbers = T, sortVar = T)
aggr(pg, prop = F, numbers = T, sortVar = T)
complete.cases(pg)
sum(complete.cases(pg))
sum(!complete.cases(pg))
pg <- pg[complete.cases(pg),]
pg
# 4가지 수치형 변수에 대해 박스플롯
boxplot(bill_length_mm, data = iris,
col = 'orange',
border = 'brown',
pch = 19)
# 4가지 수치형 변수에 대해 박스플롯
boxplot(pg$bill_length_mm, pg$bill_depth_mm, pg$flipper_length_mm, pg$body_mass_g,
col = 'orange',
border = 'brown',
pch = 19)
# 4가지 수치형 변수에 대해 박스플롯
boxplot(pg$bill_length_mm,
col = 'orange',
border = 'brown',
pch = 19)
par(nfrow = c(1,4))
boxplot(pg$bill_length_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$bill_depth_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$flipper_length_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$body_mass_g,
col = 'orange',
border = 'brown',
pch = 19)
par(mfrow = c(1,4))
boxplot(pg$bill_length_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$bill_depth_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$flipper_length_mm,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(pg$body_mass_g,
col = 'orange',
border = 'brown',
pch = 19)
par(mfrow = c(1,4))
boxplot(pg$bill_length_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$bill_depth_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$flipper_length_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$body_mass_g,
col = 'orange',
border = 'black',
pch = 19)
par(mfrow = c(1,1))
hist(pg$bill_length_mm, col = 'skyblue')
hist(pg$bill_depth_mm, col = 'blue')
hist(pg$flipper_length_mm, col = 'orange')
hist(pg$body_mass_g, col = 'pink')
par(mfrow = c(1,1)
par(mfrow = c(2,2))
par(mfrow = c(2,2))
hist(pg$bill_length_mm, col = 'skyblue')
hist(pg$bill_depth_mm, col = 'blue')
hist(pg$flipper_length_mm, col = 'orange')
hist(pg$body_mass_g, col = 'pink')
par(mfrow = c(1,1)
# 펭귄의 종별로 박스플롯
boxplot(bill_length_mm ~ Species, data = pg,
# 펭귄의 종별로 박스플롯
boxplot(bill_length_mm ~ Species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
pg
# 펭귄의 종별로 박스플롯
boxplot(bill_length_mm ~ species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
par(mfrow = c(2,2))
boxplot(bill_length_mm ~ species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(bill_depth_mm ~ species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(flipper_length_mm ~ species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
boxplot(body_mass_g ~ species, data = pg,
col = 'orange',
border = 'brown',
pch = 19)
par(mfrow = c(1,1))
par(mfrow = c(2,2))
boxplot(bill_length_mm ~ species, data = pg,
col = c('pink','skyblue','green')
border = 'brown',
par(mfrow = c(2,2))
boxplot(bill_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(bill_depth_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(flipper_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(body_mass_g ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
par(mfrow = c(1,1))
str(pg)
#
boxplot.stats(pg[pg$species==Adelie],5)
#
boxplot.stats(pg[pg$species=='Adelie'],5)
pg
pg[pg$species=='Adelie']
pg[pg$species=='Adelie',]
pg[pg$species=='Adelie',5]
#
boxplot.stats(pg[pg$species=='Adelie',5])
# boxplot.stats() 함수를 이용하여 Adelie 펭귄의 날개 길이에서 나타난 이상치의 값과 Chinstrap
# 펭귄의 체질량에서 나타난 이상치의 값
boxplot.stats(pg[pg$species=='Adelie',5])$out
boxplot.stats(pg[pg$species=='Chinstrap',6])$out
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
order(pg$flipper_length_mm, decreasing = F)
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
order(pg, pg$flipper_length_mm, decreasing = F)
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
order(pg$species, pg$flipper_length_mm, decreasing = F)
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
pg[order(pg$flipper_length_mm, decreasing = F),]
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
order(pg$flipper_length_mm, decreasing = F)
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
ord <- order(pg$flipper_length_mm, decreasing = F)
pg[ord,]
sort(pg[ord,])
pg[ord,]
pg[ord,1:]
pg[ord,1:7]
pg[ord,]
?ord
?order
row.names(pg[ord,]) <- NULL
pg[ord,]
rownames(pg[ord,]) <- NULL
pg[ord,]
rownames(pg[ord,]) <- NULL
pg[ord,]
rownames(pg[ord,])
rownames(pg[ord,]) <- Null()
rownames(pg[ord,]) <- Null
rownames(pg[ord,]) <- NULL
pg[ord,]
# order() 함수를 이용하여 penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬
ord <- order(pg$flipper_length_mm, decreasing = F)
rownames(pg[ord,]) <- NULL
pg[ord,]
pg.ord <- pg[ord,]
rownames(pg.ord) <- NULL
pg.ord
library(dplyr)
# penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬하되,
# 날개의 길이가 같으면 체질량을 기준으로 내림차순으로 정렬해보자.
ord2 <- order(pg$flipper_length_mm, -pg$body_mass_g, decreasing = F)
# penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬하되,
# 날개의 길이가 같으면 체질량을 기준으로 내림차순으로 정렬해보자.
ord2 <- order(pg$flipper_length_mm, -pg$body_mass_g, decreasing = F)
pg.ord2 <- pg[ord2,]
rownames(pg.ord2) <- NULL
pg.ord2
View(set)
View(sp)
View(vrs)
# 비율 구하기 aggregate by >> 수치형 데이터 들어가야함
df <- na.omit(penguins)
FUN = length
prop.table(table(df$species))
View(div3.cnt)
table(df$island, df$species)
prop.table(table(df$island, df$species))
library(gmodels)
install.packages('gmodels')
View(div.cnt3)
library(gmodels)
CrossTable(df$island, df$species,
prop.t = F, prop.chisq = T)
view(CrossTable(df$island, df$species,
prop.t = F, prop.chisq = T))
CrossTable(df$island, df$species,
prop.t = F, prop.chisq = T)
describe(pg)[, c(1:3,8:9)]
# ggplot
install.packages('ggplot')
library(ggplot2)
aggregate(df[,3:6],
by = list(species = df$species),
FUN = mean)
# 9장
pg <- data.frame(penguins)
pg
str(pg)
dim(pg)
summary(penguins[, c(1, 2, 7)])
aggr(pg, numbers = T, prop = F)
pg <- na.omit(pg)
aggr(pg, numbers = T, prop = F)
dim(pg)
# table table 값들의 빈도수를 보여줌
table(pg$island)
barplot(table(pg$island))
table(pg$species)
barplot(table(pg$species))
table(pg$sex)
barplot(table(pg$sex))
# 3가지 범주형 변수에 대한 막대그래프
par(mfrow = c(1,3))
barplot(table(pg$island), col = c('pink','green','blue'))
barplot(table(pg$species), col = c('skyblue','violet','orange'))
barplot(table(pg$island))
table(pg$species)
aggregate(pg[,3:6],
by = list(species = pg$species),
FUN = mean)
par(mfrow = c(2,2))
boxplot(bill_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(bill_depth_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(flipper_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(body_mass_g ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
par(mfrow = c(1,1))
par(mfrow = c(1,4))
boxplot(pg$bill_length_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$bill_depth_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$flipper_length_mm,
col = 'orange',
border = 'black',
pch = 19)
boxplot(pg$body_mass_g,
col = 'orange',
border = 'black',
pch = 19)
par(mfrow = c(1,1))
hist(pg$bill_length_mm, col = 'skyblue')
l
par(mfrow = c(1,3))
barplot(table(pg$island), col = c('pink','green','blue'))
barplot(table(pg$species), col = c('skyblue','violet','orange'))
barplot(table(pg$sex), col = c('yellow','red'))
par(mfrow = c(1,1))
par(mfrow = c(2,2))
boxplot(bill_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(bill_depth_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(flipper_length_mm ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
boxplot(body_mass_g ~ species, data = pg,
col = c('pink','skyblue','green'),
border = 'brown',
pch = 19)
par(mfrow = c(1,1))
boxplot.stats(pg$species)
boxplot.stats(pg$species)
boxplot.stats(flipper_length_mm ~ species, data = pg)
pg
boxplot.stats(pg)
boxplot.stats(pg$species)
boxplot.stats(pg$flipper_length_mm)
boxplot.stats(pg$bill_depth_mm)
boxplot.stats(pg$bill_depth_mm)$out
View(survey)
boxplot(flipper_length_mm ~ species,
data = pg, col = 2:4)
adelie <- split(df, df$species)$Adelie
adelie
boxplot.stats(adelie$flipper_length_mm)
boxplot.stats(adelie$flipper_length_mm)$out
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
df[df$flipper_length_mm %in% outlier,]
adelie <- split(df, f = df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
df[df$flipper_length_mm %in% outlier,]
dim(df[df$flipper_length_mm %in% outlier,])
pg.ord2
View(pg.ord2)
# penguins 데이터셋을 날개의 길이를 기준으로 오름차순으로 정렬하되,
# 날개의 길이가 같으면 체질량을 기준으로 내림차순으로 정렬해보자.
ord2 <- order(pg$flipper_length_mm, -pg$body_mass_g)
pg.ord2 <- pg[ord2,]
rownames(pg.ord2) <- NULL
View(pg.ord2)
View(set)
View(set)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
tinytex::install_tinytex()
plot(pg$bill_length_mm,pg$bill_depth_mm)
plot(pg$bill_length_mm,pg$bill_depth_mm, pch = 19, col = 'red')
boxplot(Petal.Length ~ Species, data = iris,
col = 'orange',
border = 'brown',
pch = 19)
hist(pg$bill_length_mm, col = 'skyblue')
barplot(table(iris$Species),
col = 'tomato',
main = '품종의 막대그래프',
xlab = '품종',
ylab = '개수')
aggregate(df[,-5],
by = list(품종=df$Species),
FUN = mean)
table(pg$species)
table(pg$species)
barplot(table(pg$species))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
plot(pg$bill_length_mm,pg$bill_depth_mm, pch = 19, col = 'red')
my.color <- ifelse(pg$species == 'Gentoo', 1,
ifelse(pg$species == 'Adelie', 'steelblue', 'orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
my.color <- ifelse(pg$species == 'Gentoo', 1,
ifelse(pg$species == 'Adelie', 'steelblue', 'orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
my.color <- ifelse(pg$species == 'Gentoo', 1,
ifelse(pg$species == 'Adelie', 2, 3))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
#my.color <- ifelse(pg$species == 'Gentoo', 1,
#                   ifelse(pg$species == 'Adelie', 2, 3))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = as.numeric(pg$species))
#my.color <- ifelse(pg$species == 'Gentoo', 1,
#                   ifelse(pg$species == 'Adelie', 2, 3))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = as.numeric(pg$species)+1)
pg <- na.omit(pg)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = as.numeric(pg$species)+1)
library(palmerpenguins)
data(package = 'palmerpenguins')
data('penguins')
pg <- data.frame(penguins)
pg <- na.omit(pg)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = as.numeric(pg$species)+1)
library(palmerpenguins)
data('penguins')
pg <- data.frame(penguins)
pg <- na.omit(pg)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = as.numeric(pg$species)+1)
plot(pg$bill_length_mm, pg$bill_depth_mm)
plot(df, col = 'green', pch = 19)
cod(df)
cor(df)
df <- mtcars
str(df)
df <- mtcars[,1:6]
df
plot(df, col = 'green', pch = 19)
cor(df)
library(corregram)
library(corrgram)
install.packages("corrgram")
library(corrgram)
corrgram(df)
lm(mpg ~ , data = df)
lm(mpg ~ ., data = df)
model <- lm(mpg ~ ., data = df)
summary(model)
model <- lm(mpg ~ hp + wt, data = df)
summary(model)
